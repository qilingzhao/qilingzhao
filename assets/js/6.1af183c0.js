(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{352:function(t,r,s){"use strict";s.r(r);var a=s(42),v=Object(a.a)({},(function(){var t=this,r=t.$createElement,s=t._self._c||r;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("blockquote",[s("p",[t._v("《The Go Programming Language》读书笔记")])]),t._v(" "),s("h1",{attrs:{id:"ch2-程序结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ch2-程序结构"}},[t._v("#")]),t._v(" ch2.程序结构")]),t._v(" "),s("h2",{attrs:{id:"命名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命名"}},[t._v("#")]),t._v(" 命名")]),t._v(" "),s("p",[t._v("如果一个(const, var func, type)名字是在函数"),s("strong",[t._v("内部定义")]),t._v("，那么就"),s("strong",[t._v("只在")]),t._v("函数"),s("strong",[t._v("内部")]),t._v("有效。如果在函数"),s("strong",[t._v("外部定义")]),t._v("，那么将在当前"),s("strong",[t._v("包内所有文件中")]),t._v("都可以访问。名字的"),s("strong",[t._v("首字母大小")]),t._v("写决定了名字在"),s("strong",[t._v("包外的可见性")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"声明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#声明"}},[t._v("#")]),t._v(" 声明")]),t._v(" "),s("p",[s("strong",[t._v("包一级")]),t._v("的各种类型的声明语句的"),s("strong",[t._v("顺序无关紧要")]),t._v("，"),s("strong",[t._v("函数内部")]),t._v("的名字则必须"),s("strong",[t._v("先声明")]),t._v("之后才能使用。")]),t._v(" "),s("h2",{attrs:{id:"变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[t._v("#")]),t._v(" 变量")])])}),[],!1,null,null,null);r.default=v.exports}}]);